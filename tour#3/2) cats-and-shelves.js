// Настала пора помочь котику. Бесконечное количество полок расположены одна над одной в шахматном порядке.
// Согласно иллюстрации ниже, котик может запрыгнуть с 1-ой полки либо на 2-ую либо на 4-ую, 
// однако он не может запрыгнуть на полку, которая находится над ним. 
// И, например, находясь на 2-ой полке он смог бы запрыгнуть на 3-ю или 5-ую полки, но не на 4-ую.
// Исходя из условия, Вам нужно рассчитать сколько потребуется прыжков котику чтобы добраться от старта до финиша.

// Параметры в функции: 
// start - полка, на которой в данный момент расположен котик, 
// finish - полка на которую котитку нужно добраться.

//                  ┌────────┐
//                  │-6------│
//                  └────────┘
// ┌────────┐
// │------5-│
// └────────┘  ┌─────► OK!
//             │    ┌────────┐
//             │    │-4------│
//             │    └────────┘
// ┌────────┐  │
// │------3-│  │
// BANG!────┘  ├─────► OK!
//   ▲  |\_/|  │    ┌────────┐
//   │ ("^-^)  │    │-2------│
//   │ )   (   │    └────────┘
// ┌─┴─┴───┴┬──┘
// │------1-│
// └────────┘

const catsAndShelves = (start, finish) => {
    let count = 0;
    while (start < finish) {
        ((start % 2 == 1 || start % 2 == 0) && finish - start >= 3)
            ? start += 3
            : start++
        count++;
    }
    return count
}


// tests
console.log(catsAndShelves(2, 5)) // 1
console.log(catsAndShelves(2, 4)) // 2
console.log(catsAndShelves(1, 6)) // 3
console.log(catsAndShelves(155, 680)) // 175